Prilikom testiranja(black box) programa Calculator zapazio sam sljedece:

*Prilikom testiranja aritmetickih metoda(sabiranje, oduzimanje, mnozenje i dijeljenje) test je prosao


UNOS                           REZULTAT                             OCEKIVANI REZULTAT

12+6                              18                                        18                 PASSED
234-65                           169                                       169                 PASSED
23*4                              92                                        92                 PASSED
54/8                             6.75                                      6.75                PASSED

Za prioritet operatera test je takodje prosao

 UNOS                          REZULTAT                             OCEKIVANI REZULTAT

5*22+7                           117                                       117                 PASSED

Dijeljenje sa nulom test je prosao

UNOS                           REZULTAT                            OCEKIVANI REZULTAT

7/0                              ERROR                                  ERROR                  PASSED

Mnozenje velikih brojeva-test je prosao

UNOS                           REZULTAT                            OCEKIVANI REZULTAT

999999999*999999999             999999998000000001                  999999998000000001         PASSED

Nepoznati simboli-test je prosao

UNOS                           REZULTAT                            OCEKIVANI REZULTAT

abc+3                           ERROR                                   ERROR                  PASSED

Parsiranje- test nije prosao

UNOS                          REZULTAT                             OCEKIVANI REZULTAT

"5+3"                           "5+3"                                     8                    FAILED



Takodje sam po zadatku iz assignmenta napravio jedinicni test CalculatorTest.java koji je nakon pokretanja ispisao da je test prosao(PASSED)
Kod ovog jedinicnog testa dodao sam u fajl CalculatorTest.java na GitHub
Ovo je kod jedinicnog testa:


import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;

public class CalculatorTest {

    @Test
    void testAddition() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(5f, 3f));
        List<String> operations = new ArrayList<>(Arrays.asList("+"));

        Calculator.Calculate(numbers, operations);
        
        assertEquals(8f, Calculator.finalResult, "Sabiranje treba vratiti 8");
    }

    @Test
    void testSubtraction() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(10f, 4f));
        List<String> operations = new ArrayList<>(Arrays.asList("-"));

        Calculator.Calculate(numbers, operations);

        assertEquals(6f, Calculator.finalResult, "Oduzimanje treba vratiti 6");
    }

    @Test
    void testMultiplication() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(6f, 2f));
        List<String> operations = new ArrayList<>(Arrays.asList("*"));

        Calculator.Calculate(numbers, operations);
        
        assertEquals(12f, Calculator.finalResult, "Množenje treba vratiti 12");
    }

    @Test
    void testDivision() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(8f, 2f));
        List<String> operations = new ArrayList<>(Arrays.asList("/"));

        Calculator.Calculate(numbers, operations);
        
        assertEquals(4f, Calculator.finalResult, "Dijeljenje treba vratiti 4");
    }

    @Test
    void testOperatorPrecedence() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(10f, 2f, 3f));
        List<String> operations = new ArrayList<>(Arrays.asList("*", "+"));

        Calculator.Calculate(numbers, operations);
        
        assertEquals(23f, Calculator.finalResult, "Množenje treba imati prednost nad sabiranjem");
    }

    @Test
    void testDivisionByZero() {
        List<Float> numbers = new ArrayList<>(Arrays.asList(5f, 0f));
        List<String> operations = new ArrayList<>(Arrays.asList("/"));

        Calculator.Calculate(numbers, operations);
        
        assertTrue(Float.isInfinite(Calculator.finalResult), "Dijeljenje s nulom treba vratiti beskonačnost");
    }
}



